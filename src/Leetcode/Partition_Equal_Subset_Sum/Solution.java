package Leetcode.Partition_Equal_Subset_Sum;

import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
    public static boolean canPartition(int[] nums) {
        int sum = 0;
        for(int i=0;i<nums.length;i++){
            sum += nums[i];
        }
        if(sum % 2 == 1){
            return false;
        }
        sum /= 2;
        boolean[][] dp = new boolean[nums.length+1][sum+1];
        dp[nums.length][0] = true;
        for(int i=nums.length-1;i>=0;i--){
            for(int j=0;j<=sum;j++){
                if(dp[i+1][j]){
                    dp[i][j] = true;
                    if(j+nums[i] > sum){
                        continue;
                    }
                    dp[i][j+nums[i]] = true;
                }
            }
        }
        return dp[0][sum];
    }

    public static void main(String[] args){
        int[] nums = {};
        System.out.println(canPartition(nums));
    }
}
